<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAAeCAYAAABjTz27AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfoBRAKKgYlpQdrAAAHzUlEQVRYR+1XaUxVRxgdEFllM4hx
        wTSAjbYmxFYTd+pC1KA/jMGlJKLWJVGrbW1cWjVqXOKSGKMh7kYEbVWMgoCCiCuKGreAIIoLqCCKgKAg
        INNzhjvk8kTbypP+6Zd8ufe9O9+958y3jvhfPkGuXLkitm3bJi5evChyc3PF/fv3xYULF8SNGzeMFe/L
        4cOHxbJly0RycrLIzs4WWVlZ4tKlS+L69evGiv9Izp07J/bv3y+klOLo0aM+APU9CH5z4MABG4JtTFJT
        U9UG0CYqKsr76tWro2HTNyYmxvbs2bPGqmaU4OBgBWbv3r2irKxMbN261RU7OxreOVlUVFRRWFi49+7d
        uy4PHjwwLOokLS1N7Nq1Szx+/FisW7fO6fz588H37t2Lgc2rgoKCxJs3b3plZmYaq5tBVq9eXU8EgMX8
        +fPtz5w5EwhQkcXFxUVv3ryR1JcvXx57+PChe15enrKjzZ49e1RoTps2zQ5EesAmHEQKXr9+rWzy8/PT
        4dEvGKrNIjNmzFBXxr6zs7PtqVOnvkLsr3nx4kUuAVVWVsqKigpNKBbeUYRIJi4uTtkmJCT4wgOL4MFs
        EqEN1/P+yZMnt48dO+b7oTC1mkycOFFdk5KSFLjIyMj2SPafECI3AKTm7du3kkpwmhS8FYfC4MEQow1y
        zAs2PwB0anl5eZV5rSb09OnTDBD3xUap71ldJk2aJBwcHERsbKyAFxgy7siTMciT5FevXlVoIpZKoM+e
        PUs4ffq0B6qYMwpA8KNHj46WlpaW8ZleYyZExZqMffv2+aKwGAisKFOnThUBAQECcS5WrVrlgLgORAhF
        lpSUFGtQllpVVSVRICRKt1y6dGlSREREEPJsKzajkMDNazUhKjwmsVFy5cqV14cOHdpx7NixBgoryNq1
        a5noqhpREhMTu6I/rH3+/PkjS1BUkqAS2J07d+SaNWvksGHD5OLFixFBT3Ow87WWNlppg02S4eHhcsiQ
        IQXt2rX7zc3NzaFNmzbq200S1H+xaNEicfz4cRXzJ06caH/79u0fETrXzHmiVRPhPfJC7t69W44aNUqG
        hoZKvItFocF6rdoreK88ePCgDAkJKfXx8Yl2dHQcZmNj4+Tl5WUgaoKwwW3ZskURATC3y5cvh6BPJDFP
        +HEzIE2EStDx8fEyLCxMjhgxQuI9TGxZU1NTT9ZSEbISSS+nT59e1blz51QQCQMET3d3d+Hq6io8PT1F
        q1at6oB9ipAEuzb6i8oTVKYI9AbVTxojU11drSoSSMu5c+fKoKAguXz5comwVGv43Gyj7fg+NE25ZMkS
        2b179yyA/93Ozs6XGEjE29tb4LfC1CRhKY6OjnbJyMhYjDDIY1ITMPPFkhB/G3lS279//0I0yHJshlqv
        iWjvme1QveTmzZtlYGBgfuvWrTcBeHd8uoWLi4ug0jtOTk51gJoqnMNOnjzpjxDLIjBWHF61h8yk+Gz9
        +vXVHTp0iO7Zs2coyKUzvEhGEzErbWiPavcO4ZWEzwVBEWWOKqyaFFofkuHDh4t+/fp9OW/evGyEnESv
        qO8L2kuaFK/Y7ar09PQDyJfxM2fO5KgikWuNktIbgaLxDuGWcOvWrUE7d+50wJQgjhw5ovqb1QWVhRd4
        3mUJdj0PuSQBWPUTS1JUA2gtkj8fVbFs0KBBEleJKUCtNxPThHjP96CIPEGObsQ0HoCmbctjAiZyNdzO
        nj1b4WmytGzZ0rgT9tDvEM9R6AnFO3bsULHfGCkNkp5Bn5ITJkyQaIhy48aNEoDrn2tCVG2LsK1FT8vI
        ycn5FQOqD4tSSkqKKk5WEyYk1dbWlj/doePR5FLGjRv3lj0Fnb4BIa0ESo8ghCSmbzly5EjVizC3qf+0
        tyxJcYOwGZWYrlPQ68ZjIPUgIbQARQwTA3E0TTizkRRLp9HcfFq0aPGzv7//zTlz5rzT+aUBmb1G0FR6
        h5MCw3DKlCmS+UWbxrxFe3qfoxQK0p/IsSAMvU5W9RSFxFiFQIY/mWBf29vbr0PvyF2xYoXEjqpqZ0mK
        QOkR3uP0SUIF3bp1e7hw4cLaa9euqcrZmLdIiu9DFORjQxZgrcNnOeAxt0BEFw0HaCDmrKjBgweXbN++
        XWLibkBIK8ESOHpafJcuXYKwOdv79OnzXOeXXqNJaU+RMMcsDLYdQYrftL6QlPaWkV8e0HHo6qfGjBlT
        iTFfIsEbENKK81AMiLlivQt0JBpqLHKsnPmFc1SjpLBJmZjv/JBT/NbnE06/AKNIGeNJB+gvvr6+t2bN
        mlWDaqUqnpkQSnQ8xiFPTN16MzhCT0VTTps8eXI1mjlJNyBFQiDs91nOQ40JQ9DDw0MBRK4RZTd4sUF+
        ERhBItnjUJo9UPpV2NLLnTp1Yvz6Y1OWdu3a9e6CBQsk84veYZiiAWceOnTIn9Wu2UT3LVMY6vyKRHUr
        Yn7hUCfRPBPRpFtv2rSpfk6jd42c5Et64P/w3r17F2zYsEHNiKikWTiL+VulbP9bobcoRjWkuEFD2rZt
        mzxw4MCKXr16/YEm7Yp+VvfUEFPYUsg0GEeG2AEDBpT37ds3Geu9/fz86p7+V2IB0gcaCv0Ww6eN4cUG
        wtbAjTDZtIXy3N0f/71v0NxCbxEclUAZllRnZ+ePHgu4nutImle+5+9sml0Ixqz/REjCrB8XIf4CTvMY
        DSlqU1cAAAAASUVORK5CYII=
</value>
  </data>
</root>